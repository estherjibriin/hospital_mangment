#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace hospital_mangment
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="hospital")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertinventory(inventory instance);
    partial void Updateinventory(inventory instance);
    partial void Deleteinventory(inventory instance);
    partial void Insertinvoice(invoice instance);
    partial void Updateinvoice(invoice instance);
    partial void Deleteinvoice(invoice instance);
    partial void Insertpatient(patient instance);
    partial void Updatepatient(patient instance);
    partial void Deletepatient(patient instance);
    partial void Insertdoctor(doctor instance);
    partial void Updatedoctor(doctor instance);
    partial void Deletedoctor(doctor instance);
    partial void Insertappointment(appointment instance);
    partial void Updateappointment(appointment instance);
    partial void Deleteappointment(appointment instance);
    #endregion
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<inventory> inventories
		{
			get
			{
				return this.GetTable<inventory>();
			}
		}
		
		public System.Data.Linq.Table<invoice> invoices
		{
			get
			{
				return this.GetTable<invoice>();
			}
		}
		
		public System.Data.Linq.Table<patient> patients
		{
			get
			{
				return this.GetTable<patient>();
			}
		}
		
		public System.Data.Linq.Table<doctor> doctors
		{
			get
			{
				return this.GetTable<doctor>();
			}
		}
		
		public System.Data.Linq.Table<appointment> appointments
		{
			get
			{
				return this.GetTable<appointment>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.inventory")]
	public partial class inventory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _item_name;
		
		private string _item_type;
		
		private System.Nullable<int> _item_quantity;
		
		private System.Nullable<int> _reorder_threshold;
		
		private System.Nullable<int> _reorder_quantity;
		
		private string _supplier_name;
		
		private string _supplier_contact;
		
		private System.Nullable<decimal> _cost_per_unit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onitem_nameChanging(string value);
    partial void Onitem_nameChanged();
    partial void Onitem_typeChanging(string value);
    partial void Onitem_typeChanged();
    partial void Onitem_quantityChanging(System.Nullable<int> value);
    partial void Onitem_quantityChanged();
    partial void Onreorder_thresholdChanging(System.Nullable<int> value);
    partial void Onreorder_thresholdChanged();
    partial void Onreorder_quantityChanging(System.Nullable<int> value);
    partial void Onreorder_quantityChanged();
    partial void Onsupplier_nameChanging(string value);
    partial void Onsupplier_nameChanged();
    partial void Onsupplier_contactChanging(string value);
    partial void Onsupplier_contactChanged();
    partial void Oncost_per_unitChanging(System.Nullable<decimal> value);
    partial void Oncost_per_unitChanged();
    #endregion
		
		public inventory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_name", DbType="VarChar(255)")]
		public string item_name
		{
			get
			{
				return this._item_name;
			}
			set
			{
				if ((this._item_name != value))
				{
					this.Onitem_nameChanging(value);
					this.SendPropertyChanging();
					this._item_name = value;
					this.SendPropertyChanged("item_name");
					this.Onitem_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_type", DbType="VarChar(255)")]
		public string item_type
		{
			get
			{
				return this._item_type;
			}
			set
			{
				if ((this._item_type != value))
				{
					this.Onitem_typeChanging(value);
					this.SendPropertyChanging();
					this._item_type = value;
					this.SendPropertyChanged("item_type");
					this.Onitem_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_quantity", DbType="Int")]
		public System.Nullable<int> item_quantity
		{
			get
			{
				return this._item_quantity;
			}
			set
			{
				if ((this._item_quantity != value))
				{
					this.Onitem_quantityChanging(value);
					this.SendPropertyChanging();
					this._item_quantity = value;
					this.SendPropertyChanged("item_quantity");
					this.Onitem_quantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reorder_threshold", DbType="Int")]
		public System.Nullable<int> reorder_threshold
		{
			get
			{
				return this._reorder_threshold;
			}
			set
			{
				if ((this._reorder_threshold != value))
				{
					this.Onreorder_thresholdChanging(value);
					this.SendPropertyChanging();
					this._reorder_threshold = value;
					this.SendPropertyChanged("reorder_threshold");
					this.Onreorder_thresholdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reorder_quantity", DbType="Int")]
		public System.Nullable<int> reorder_quantity
		{
			get
			{
				return this._reorder_quantity;
			}
			set
			{
				if ((this._reorder_quantity != value))
				{
					this.Onreorder_quantityChanging(value);
					this.SendPropertyChanging();
					this._reorder_quantity = value;
					this.SendPropertyChanged("reorder_quantity");
					this.Onreorder_quantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplier_name", DbType="VarChar(255)")]
		public string supplier_name
		{
			get
			{
				return this._supplier_name;
			}
			set
			{
				if ((this._supplier_name != value))
				{
					this.Onsupplier_nameChanging(value);
					this.SendPropertyChanging();
					this._supplier_name = value;
					this.SendPropertyChanged("supplier_name");
					this.Onsupplier_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplier_contact", DbType="VarChar(255)")]
		public string supplier_contact
		{
			get
			{
				return this._supplier_contact;
			}
			set
			{
				if ((this._supplier_contact != value))
				{
					this.Onsupplier_contactChanging(value);
					this.SendPropertyChanging();
					this._supplier_contact = value;
					this.SendPropertyChanged("supplier_contact");
					this.Onsupplier_contactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cost_per_unit", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> cost_per_unit
		{
			get
			{
				return this._cost_per_unit;
			}
			set
			{
				if ((this._cost_per_unit != value))
				{
					this.Oncost_per_unitChanging(value);
					this.SendPropertyChanging();
					this._cost_per_unit = value;
					this.SendPropertyChanged("cost_per_unit");
					this.Oncost_per_unitChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.invoices")]
	public partial class invoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _patient_id;
		
		private System.Nullable<System.DateTime> _invoice_date;
		
		private System.Nullable<decimal> _total_cost;
		
		private string _payment_status;
		
		private string _payment_method;
		
		private string _insurance_company;
		
		private string _insurance_policy_number;
		
		private EntityRef<patient> _patient;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onpatient_idChanging(System.Nullable<int> value);
    partial void Onpatient_idChanged();
    partial void Oninvoice_dateChanging(System.Nullable<System.DateTime> value);
    partial void Oninvoice_dateChanged();
    partial void Ontotal_costChanging(System.Nullable<decimal> value);
    partial void Ontotal_costChanged();
    partial void Onpayment_statusChanging(string value);
    partial void Onpayment_statusChanged();
    partial void Onpayment_methodChanging(string value);
    partial void Onpayment_methodChanged();
    partial void Oninsurance_companyChanging(string value);
    partial void Oninsurance_companyChanged();
    partial void Oninsurance_policy_numberChanging(string value);
    partial void Oninsurance_policy_numberChanged();
    #endregion
		
		public invoice()
		{
			this._patient = default(EntityRef<patient>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patient_id", DbType="Int")]
		public System.Nullable<int> patient_id
		{
			get
			{
				return this._patient_id;
			}
			set
			{
				if ((this._patient_id != value))
				{
					if (this._patient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpatient_idChanging(value);
					this.SendPropertyChanging();
					this._patient_id = value;
					this.SendPropertyChanged("patient_id");
					this.Onpatient_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoice_date", DbType="Date")]
		public System.Nullable<System.DateTime> invoice_date
		{
			get
			{
				return this._invoice_date;
			}
			set
			{
				if ((this._invoice_date != value))
				{
					this.Oninvoice_dateChanging(value);
					this.SendPropertyChanging();
					this._invoice_date = value;
					this.SendPropertyChanged("invoice_date");
					this.Oninvoice_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_cost", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> total_cost
		{
			get
			{
				return this._total_cost;
			}
			set
			{
				if ((this._total_cost != value))
				{
					this.Ontotal_costChanging(value);
					this.SendPropertyChanging();
					this._total_cost = value;
					this.SendPropertyChanged("total_cost");
					this.Ontotal_costChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_status", DbType="VarChar(50)")]
		public string payment_status
		{
			get
			{
				return this._payment_status;
			}
			set
			{
				if ((this._payment_status != value))
				{
					this.Onpayment_statusChanging(value);
					this.SendPropertyChanging();
					this._payment_status = value;
					this.SendPropertyChanged("payment_status");
					this.Onpayment_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_method", DbType="VarChar(50)")]
		public string payment_method
		{
			get
			{
				return this._payment_method;
			}
			set
			{
				if ((this._payment_method != value))
				{
					this.Onpayment_methodChanging(value);
					this.SendPropertyChanging();
					this._payment_method = value;
					this.SendPropertyChanged("payment_method");
					this.Onpayment_methodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_insurance_company", DbType="VarChar(255)")]
		public string insurance_company
		{
			get
			{
				return this._insurance_company;
			}
			set
			{
				if ((this._insurance_company != value))
				{
					this.Oninsurance_companyChanging(value);
					this.SendPropertyChanging();
					this._insurance_company = value;
					this.SendPropertyChanged("insurance_company");
					this.Oninsurance_companyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_insurance_policy_number", DbType="VarChar(255)")]
		public string insurance_policy_number
		{
			get
			{
				return this._insurance_policy_number;
			}
			set
			{
				if ((this._insurance_policy_number != value))
				{
					this.Oninsurance_policy_numberChanging(value);
					this.SendPropertyChanging();
					this._insurance_policy_number = value;
					this.SendPropertyChanged("insurance_policy_number");
					this.Oninsurance_policy_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="patient_invoice", Storage="_patient", ThisKey="patient_id", OtherKey="id", IsForeignKey=true)]
		public patient patient
		{
			get
			{
				return this._patient.Entity;
			}
			set
			{
				patient previousValue = this._patient.Entity;
				if (((previousValue != value) 
							|| (this._patient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._patient.Entity = null;
						previousValue.invoices.Remove(this);
					}
					this._patient.Entity = value;
					if ((value != null))
					{
						value.invoices.Add(this);
						this._patient_id = value.id;
					}
					else
					{
						this._patient_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("patient");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.patients")]
	public partial class patient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _first_name;
		
		private System.Nullable<System.DateTime> _date_of_birth;
		
		private string _gender;
		
		private string _phone_number;
		
		private string _email;
		
		private string _address;
		
		private string _medical_history;
		
		private string _allergies;
		
		private EntitySet<invoice> _invoices;
		
		private EntitySet<appointment> _appointments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void Ondate_of_birthChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_of_birthChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void Onphone_numberChanging(string value);
    partial void Onphone_numberChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void Onmedical_historyChanging(string value);
    partial void Onmedical_historyChanged();
    partial void OnallergiesChanging(string value);
    partial void OnallergiesChanged();
    #endregion
		
		public patient()
		{
			this._invoices = new EntitySet<invoice>(new Action<invoice>(this.attach_invoices), new Action<invoice>(this.detach_invoices));
			this._appointments = new EntitySet<appointment>(new Action<appointment>(this.attach_appointments), new Action<appointment>(this.detach_appointments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_name", DbType="VarChar(255)")]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_of_birth", DbType="Date")]
		public System.Nullable<System.DateTime> date_of_birth
		{
			get
			{
				return this._date_of_birth;
			}
			set
			{
				if ((this._date_of_birth != value))
				{
					this.Ondate_of_birthChanging(value);
					this.SendPropertyChanging();
					this._date_of_birth = value;
					this.SendPropertyChanged("date_of_birth");
					this.Ondate_of_birthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="VarChar(10)")]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_number", DbType="VarChar(20)")]
		public string phone_number
		{
			get
			{
				return this._phone_number;
			}
			set
			{
				if ((this._phone_number != value))
				{
					this.Onphone_numberChanging(value);
					this.SendPropertyChanging();
					this._phone_number = value;
					this.SendPropertyChanged("phone_number");
					this.Onphone_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(255)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(255)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medical_history", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string medical_history
		{
			get
			{
				return this._medical_history;
			}
			set
			{
				if ((this._medical_history != value))
				{
					this.Onmedical_historyChanging(value);
					this.SendPropertyChanging();
					this._medical_history = value;
					this.SendPropertyChanged("medical_history");
					this.Onmedical_historyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_allergies", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string allergies
		{
			get
			{
				return this._allergies;
			}
			set
			{
				if ((this._allergies != value))
				{
					this.OnallergiesChanging(value);
					this.SendPropertyChanging();
					this._allergies = value;
					this.SendPropertyChanged("allergies");
					this.OnallergiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="patient_invoice", Storage="_invoices", ThisKey="id", OtherKey="patient_id")]
		public EntitySet<invoice> invoices
		{
			get
			{
				return this._invoices;
			}
			set
			{
				this._invoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="patient_appointment", Storage="_appointments", ThisKey="id", OtherKey="patient_id")]
		public EntitySet<appointment> appointments
		{
			get
			{
				return this._appointments;
			}
			set
			{
				this._appointments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_invoices(invoice entity)
		{
			this.SendPropertyChanging();
			entity.patient = this;
		}
		
		private void detach_invoices(invoice entity)
		{
			this.SendPropertyChanging();
			entity.patient = null;
		}
		
		private void attach_appointments(appointment entity)
		{
			this.SendPropertyChanging();
			entity.patient = this;
		}
		
		private void detach_appointments(appointment entity)
		{
			this.SendPropertyChanging();
			entity.patient = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.doctors")]
	public partial class doctor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _specialty;
		
		private string _login;
		
		private string _password;
		
		private EntitySet<appointment> _appointments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnspecialtyChanging(string value);
    partial void OnspecialtyChanged();
    partial void OnloginChanging(string value);
    partial void OnloginChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    #endregion
		
		public doctor()
		{
			this._appointments = new EntitySet<appointment>(new Action<appointment>(this.attach_appointments), new Action<appointment>(this.detach_appointments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(255)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_specialty", DbType="VarChar(255)")]
		public string specialty
		{
			get
			{
				return this._specialty;
			}
			set
			{
				if ((this._specialty != value))
				{
					this.OnspecialtyChanging(value);
					this.SendPropertyChanging();
					this._specialty = value;
					this.SendPropertyChanged("specialty");
					this.OnspecialtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login", DbType="VarChar(255)")]
		public string login
		{
			get
			{
				return this._login;
			}
			set
			{
				if ((this._login != value))
				{
					this.OnloginChanging(value);
					this.SendPropertyChanging();
					this._login = value;
					this.SendPropertyChanged("login");
					this.OnloginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(255)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="doctor_appointment", Storage="_appointments", ThisKey="id", OtherKey="doctor_id")]
		public EntitySet<appointment> appointments
		{
			get
			{
				return this._appointments;
			}
			set
			{
				this._appointments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_appointments(appointment entity)
		{
			this.SendPropertyChanging();
			entity.doctor = this;
		}
		
		private void detach_appointments(appointment entity)
		{
			this.SendPropertyChanging();
			entity.doctor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.appointments")]
	public partial class appointment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _patient_id;
		
		private System.Nullable<System.DateTime> _appointment_date;
		
		private string _appointment_type;
		
		private string _notes;
		
		private System.Nullable<int> _doctor_id;
		
		private System.Nullable<bool> _is_missing;
		
		private EntityRef<doctor> _doctor;
		
		private EntityRef<patient> _patient;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onpatient_idChanging(System.Nullable<int> value);
    partial void Onpatient_idChanged();
    partial void Onappointment_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onappointment_dateChanged();
    partial void Onappointment_typeChanging(string value);
    partial void Onappointment_typeChanged();
    partial void OnnotesChanging(string value);
    partial void OnnotesChanged();
    partial void Ondoctor_idChanging(System.Nullable<int> value);
    partial void Ondoctor_idChanged();
    partial void Onis_missingChanging(System.Nullable<bool> value);
    partial void Onis_missingChanged();
    #endregion
		
		public appointment()
		{
			this._doctor = default(EntityRef<doctor>);
			this._patient = default(EntityRef<patient>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patient_id", DbType="Int")]
		public System.Nullable<int> patient_id
		{
			get
			{
				return this._patient_id;
			}
			set
			{
				if ((this._patient_id != value))
				{
					if (this._patient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpatient_idChanging(value);
					this.SendPropertyChanging();
					this._patient_id = value;
					this.SendPropertyChanged("patient_id");
					this.Onpatient_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_appointment_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> appointment_date
		{
			get
			{
				return this._appointment_date;
			}
			set
			{
				if ((this._appointment_date != value))
				{
					this.Onappointment_dateChanging(value);
					this.SendPropertyChanging();
					this._appointment_date = value;
					this.SendPropertyChanged("appointment_date");
					this.Onappointment_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_appointment_type", DbType="VarChar(255)")]
		public string appointment_type
		{
			get
			{
				return this._appointment_type;
			}
			set
			{
				if ((this._appointment_type != value))
				{
					this.Onappointment_typeChanging(value);
					this.SendPropertyChanging();
					this._appointment_type = value;
					this.SendPropertyChanged("appointment_type");
					this.Onappointment_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string notes
		{
			get
			{
				return this._notes;
			}
			set
			{
				if ((this._notes != value))
				{
					this.OnnotesChanging(value);
					this.SendPropertyChanging();
					this._notes = value;
					this.SendPropertyChanged("notes");
					this.OnnotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctor_id", DbType="Int")]
		public System.Nullable<int> doctor_id
		{
			get
			{
				return this._doctor_id;
			}
			set
			{
				if ((this._doctor_id != value))
				{
					if (this._doctor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondoctor_idChanging(value);
					this.SendPropertyChanging();
					this._doctor_id = value;
					this.SendPropertyChanged("doctor_id");
					this.Ondoctor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_missing", DbType="Bit")]
		public System.Nullable<bool> is_missing
		{
			get
			{
				return this._is_missing;
			}
			set
			{
				if ((this._is_missing != value))
				{
					this.Onis_missingChanging(value);
					this.SendPropertyChanging();
					this._is_missing = value;
					this.SendPropertyChanged("is_missing");
					this.Onis_missingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="doctor_appointment", Storage="_doctor", ThisKey="doctor_id", OtherKey="id", IsForeignKey=true)]
		public doctor doctor
		{
			get
			{
				return this._doctor.Entity;
			}
			set
			{
				doctor previousValue = this._doctor.Entity;
				if (((previousValue != value) 
							|| (this._doctor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._doctor.Entity = null;
						previousValue.appointments.Remove(this);
					}
					this._doctor.Entity = value;
					if ((value != null))
					{
						value.appointments.Add(this);
						this._doctor_id = value.id;
					}
					else
					{
						this._doctor_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("doctor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="patient_appointment", Storage="_patient", ThisKey="patient_id", OtherKey="id", IsForeignKey=true)]
		public patient patient
		{
			get
			{
				return this._patient.Entity;
			}
			set
			{
				patient previousValue = this._patient.Entity;
				if (((previousValue != value) 
							|| (this._patient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._patient.Entity = null;
						previousValue.appointments.Remove(this);
					}
					this._patient.Entity = value;
					if ((value != null))
					{
						value.appointments.Add(this);
						this._patient_id = value.id;
					}
					else
					{
						this._patient_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("patient");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
